<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>springboot</title>
      <link href="/2024/11/03/springboot/"/>
      <url>/2024/11/03/springboot/</url>
      
        <content type="html"><![CDATA[<pre><code>src/main/java└── com/example/demo├── controller        # 控制器模块│   └── UserController.java├── service           # 业务逻辑模块│   └── UserService.java├── repository        # 数据访问模块│   └── UserRepository.java├── model             # 实体类模块│   └── User.java├── dto               # 数据传输对象模块│   └── UserDTO.java├── exception         # 异常处理模块│   └── GlobalExceptionHandler.java├── config            # 配置模块│   └── AppConfig.java├── util              # 工具类模块│   └── DateUtils.java└── DemoApplication.java  # Spring Boot 启动类src/main/resources└── application.yml  # 配置文件src/test/java└── com/example/demo├── controller        # 控制器测试模块├── service           # 业务逻辑测试模块└── repository        # 数据访问测试模块</code></pre><h3 id="1-DemoApplication-启动类"><a href="#1-DemoApplication-启动类" class="headerlink" title="1.DemoApplication - 启动类"></a>1.DemoApplication - 启动类</h3><p>DemoApplication.java 是 Spring Boot 应用程序的入口点。它包含 main 方法，负责启动 Spring Boot 应用，加载所有必要的配置和组件。</p><pre><code class="javascript">package com.example.demo;import org.springframework.boot.SpringApplication;import org.springframework.boot.autoconfigure.SpringBootApplication;@SpringBootApplicationpublic class DemoApplication &#123;    public static void main(String[] args) &#123;        SpringApplication.run(DemoApplication.class, args);    &#125;&#125;</code></pre><h3 id="2-controller-模块-控制器模块"><a href="#2-controller-模块-控制器模块" class="headerlink" title="2.controller 模块 - 控制器模块"></a>2.controller 模块 - 控制器模块</h3><ul><li>负责接收用户请求（如 HTTP 请求），并将请求传递到 Service 层进行业务处理。</li><li>验证请求参数并返回相应的响应。</li><li>将业务逻辑处理结果格式化为 JSON 或 XML 等格式的响应数据返回给客户端。</li></ul><pre><code class="javascript">package com.example.demo.controller;import com.example.demo.dto.UserDTO;import com.example.demo.service.UserService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import java.util.List;@RestController@RequestMapping(&quot;/api/users&quot;)public class UserController &#123;    private final UserService userService;    @Autowired    public UserController(UserService userService) &#123;        this.userService = userService;    &#125;    @GetMapping(&quot;/&#123;id&#125;&quot;)    public ResponseEntity&lt;UserDTO&gt; getUserById(@PathVariable Long id) &#123;        UserDTO user = userService.getUserById(id);        return ResponseEntity.ok(user);    &#125;    @PostMapping    public ResponseEntity&lt;UserDTO&gt; createUser(@RequestBody UserDTO userDTO) &#123;        UserDTO createdUser = userService.createUser(userDTO);        return ResponseEntity.ok(createdUser);    &#125;&#125;</code></pre><h3 id="3-service-模块-业务逻辑模块"><a href="#3-service-模块-业务逻辑模块" class="headerlink" title="3.service 模块 - 业务逻辑模块"></a>3.service 模块 - 业务逻辑模块</h3><p>主要功能</p><ul><li>负责处理具体的业务逻辑，将请求数据转化为系统内部的操作。</li><li>调用 Repository 层来访问数据源。</li><li>包含应用的核心逻辑，例如数据处理、计算、转换等。</li></ul><pre><code class="javascript">package com.example.demo.service;import com.example.demo.dto.UserDTO;import com.example.demo.model.User;import com.example.demo.repository.UserRepository;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.List;import java.util.stream.Collectors;@Servicepublic class UserService &#123;    private final UserRepository userRepository;    @Autowired    public UserService(UserRepository userRepository) &#123;        this.userRepository = userRepository;    &#125;    public UserDTO getUserById(Long id) &#123;        User user = userRepository.findById(id).orElseThrow(() -&gt; new RuntimeException(&quot;User not found&quot;));        return convertToDTO(user);    &#125;    public UserDTO createUser(UserDTO userDTO) &#123;        User user = convertToEntity(userDTO);        User savedUser = userRepository.save(user);        return convertToDTO(savedUser);    &#125;    private UserDTO convertToDTO(User user) &#123;        UserDTO dto = new UserDTO();        dto.setId(user.getId());        dto.setUsername(user.getUsername());        dto.setEmail(user.getEmail());        return dto;    &#125;    private User convertToEntity(UserDTO dto) &#123;        User user = new User();        user.setUsername(dto.getUsername());        user.setEmail(dto.getEmail());        return user;    &#125;&#125;</code></pre><h3 id="4-repository-模块-数据访问模块"><a href="#4-repository-模块-数据访问模块" class="headerlink" title="4.repository 模块 - 数据访问模块"></a>4.repository 模块 - 数据访问模块</h3><p>主要功能</p><ul><li>负责与数据库交互，提供 CRUD 操作。</li><li>使用 Spring Data JPA 或其他数据访问技术实现数据持久化。</li><li>通过 JpaRepository 或其他接口简化数据库访问。</li></ul><pre><code class="javascript">package com.example.demo.repository;import com.example.demo.model.User;import org.springframework.data.jpa.repository.JpaRepository;import org.springframework.stereotype.Repository;@Repositorypublic interface UserRepository extends JpaRepository&lt;User, Long&gt; &#123;&#125;</code></pre><h3 id="5-model-模块-实体类模块"><a href="#5-model-模块-实体类模块" class="headerlink" title="5.model 模块 - 实体类模块"></a>5.model 模块 - 实体类模块</h3><p>主要功能</p><ul><li>定义业务实体类，用于表示数据模型，每个实体类通常对应数据库中的一张表。</li><li>使用 JPA 注解来映射数据库表结构。</li><li>包含数据字段以及实体之间的关系。</li></ul><pre><code class="javascript">package com.example.demo.model;import javax.persistence.*;@Entity@Table(name = &quot;users&quot;)public class User &#123;    @Id    @GeneratedValue(strategy = GenerationType.IDENTITY)    private Long id;    private String username;    private String email;    // Getters and Setters&#125;</code></pre><h3 id="6-dto-模块-数据传输对象模块"><a href="#6-dto-模块-数据传输对象模块" class="headerlink" title="6.dto 模块 - 数据传输对象模块"></a>6.dto 模块 - 数据传输对象模块</h3><p>主要功能</p><ul><li>用于封装数据传输的对象，主要在 Controller 和 Service 之间传递。</li><li>数据传输对象可以隐藏或过滤掉不必要的字段，确保安全性。</li><li>与实体类分离，避免直接暴露数据库结构。</li></ul><pre><code class="javascript">package com.example.demo.dto;public class UserDTO &#123;    private Long id;    private String username;    private String email;    // Getters and Setters&#125;</code></pre><h3 id="7-exception-模块-异常处理模块"><a href="#7-exception-模块-异常处理模块" class="headerlink" title="7.exception 模块 - 异常处理模块"></a>7.exception 模块 - 异常处理模块</h3><p>主要功能</p><ul><li>全局异常处理，捕获系统中的异常，并返回统一格式的错误信息。</li><li>通过 @ControllerAdvice 和 @ExceptionHandler 捕获特定异常，返回用户友好的错误信息。</li><li>确保异常不会泄露系统内部信息。</li></ul><pre><code class="javascript">package com.example.demo.exception;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.ControllerAdvice;import org.springframework.web.bind.annotation.ExceptionHandler;@ControllerAdvicepublic class GlobalExceptionHandler &#123;    @ExceptionHandler(RuntimeException.class)    public ResponseEntity&lt;String&gt; handleRuntimeException(RuntimeException ex) &#123;        return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(ex.getMessage());    &#125;&#125;</code></pre><h3 id="8-config-模块-配置模块"><a href="#8-config-模块-配置模块" class="headerlink" title="8.config 模块 - 配置模块"></a>8.config 模块 - 配置模块</h3><p>主要功能</p><ul><li>负责定义和加载应用程序配置，包括第三方库的配置。</li><li>使用 @Configuration 注解定义配置类，可以通过 @Bean 注解定义各种 Bean。</li><li>可以定义全局配置，比如 ModelMapper 等工具类的配置。</li></ul><pre><code class="javascript">package com.example.demo.config;import org.modelmapper.ModelMapper;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;@Configurationpublic class AppConfig &#123;    @Bean    public ModelMapper modelMapper() &#123;        return new ModelMapper();    &#125;&#125;</code></pre><h3 id="9-util-模块-工具类模块"><a href="#9-util-模块-工具类模块" class="headerlink" title="9.util 模块 - 工具类模块"></a>9.util 模块 - 工具类模块</h3><p>主要功能</p><ul><li>存放常用的工具类和方法，例如日期处理、字符串操作等。</li><li>提供可重用的代码片段，便于在各个模块中调用。</li><li>避免代码重复，保持项目的简洁和模块化。</li></ul><pre><code class="javascript">package com.example.demo.util;import java.time.LocalDateTime;import java.time.format.DateTimeFormatter;public class DateUtils &#123;    public static String formatDateTime(LocalDateTime dateTime) &#123;        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(&quot;yyyy-MM-dd HH:mm:ss&quot;);        return dateTime.format(formatter);    &#125;&#125;</code></pre><h3 id="10-application-yml-配置文件"><a href="#10-application-yml-配置文件" class="headerlink" title="10.application.yml - 配置文件"></a>10.application.yml - 配置文件</h3><p>主要功能</p><ul><li>application.yml 文件存放应用的配置信息，例如数据库连接、端口号、日志配置等。</li><li>可以通过不同的 Profile（如 application-dev.yml，application-prod.yml）实现环境配置的分离。</li></ul><pre><code class="javascript">spring:  datasource:    url: jdbc:mysql://localhost:3306/demo    username: root    password: password    driver-class-name: com.mysql.cj.jdbc.Driver  jpa:    hibernate:      ddl-auto: update    show-sql: trueserver:  port: 8080</code></pre><h3 id="模块之间的协作"><a href="#模块之间的协作" class="headerlink" title="模块之间的协作"></a>模块之间的协作</h3><h4 id="Controller-与-Service-层：UserController-处理-HTTP-请求，通过-UserService-完成业务逻辑，返回相应的数据。"><a href="#Controller-与-Service-层：UserController-处理-HTTP-请求，通过-UserService-完成业务逻辑，返回相应的数据。" class="headerlink" title="Controller 与 Service 层：UserController 处理 HTTP 请求，通过 UserService 完成业务逻辑，返回相应的数据。"></a>Controller 与 Service 层：UserController 处理 HTTP 请求，通过 UserService 完成业务逻辑，返回相应的数据。</h4><h4 id="Service-与-Repository-层：UserService-调用-UserRepository-执行数据的-CRUD-操作，处理完数据后将结果返回给-Controller-层。"><a href="#Service-与-Repository-层：UserService-调用-UserRepository-执行数据的-CRUD-操作，处理完数据后将结果返回给-Controller-层。" class="headerlink" title="Service 与 Repository 层：UserService 调用 UserRepository 执行数据的 CRUD 操作，处理完数据后将结果返回给 Controller 层。"></a>Service 与 Repository 层：UserService 调用 UserRepository 执行数据的 CRUD 操作，处理完数据后将结果返回给 Controller 层。</h4><h4 id="Model-与-Repository-层：User-是数据库表的映射类，通过-UserRepository-进行持久化操作。"><a href="#Model-与-Repository-层：User-是数据库表的映射类，通过-UserRepository-进行持久化操作。" class="headerlink" title="Model 与 Repository 层：User 是数据库表的映射类，通过 UserRepository 进行持久化操作。"></a>Model 与 Repository 层：User 是数据库表的映射类，通过 UserRepository 进行持久化操作。</h4><h4 id="DTO-与-Service-层：UserDTO-用于在-Controller-和-Service-之间传输数据。Service-将实体转换为-DTO-再返回给-Controller。"><a href="#DTO-与-Service-层：UserDTO-用于在-Controller-和-Service-之间传输数据。Service-将实体转换为-DTO-再返回给-Controller。" class="headerlink" title="DTO 与 Service 层：UserDTO 用于在 Controller 和 Service 之间传输数据。Service 将实体转换为 DTO 再返回给 Controller。"></a>DTO 与 Service 层：UserDTO 用于在 Controller 和 Service 之间传输数据。Service 将实体转换为 DTO 再返回给 Controller。</h4><h4 id="异常处理模块：GlobalExceptionHandler-捕获全局异常，确保系统返回用户友好的错误信息，而不是暴露详细的内部错误。"><a href="#异常处理模块：GlobalExceptionHandler-捕获全局异常，确保系统返回用户友好的错误信息，而不是暴露详细的内部错误。" class="headerlink" title="异常处理模块：GlobalExceptionHandler 捕获全局异常，确保系统返回用户友好的错误信息，而不是暴露详细的内部错误。"></a>异常处理模块：GlobalExceptionHandler 捕获全局异常，确保系统返回用户友好的错误信息，而不是暴露详细的内部错误。</h4><h4 id="工具类模块：工具类如-DateUtils-可以在各个层中使用，为开发提供便利。"><a href="#工具类模块：工具类如-DateUtils-可以在各个层中使用，为开发提供便利。" class="headerlink" title="工具类模块：工具类如 DateUtils 可以在各个层中使用，为开发提供便利。"></a>工具类模块：工具类如 DateUtils 可以在各个层中使用，为开发提供便利。</h4>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JDK8-17新特性</title>
      <link href="/2024/10/30/java/JDK8-17%E6%96%B0%E7%89%B9%E6%80%A7/"/>
      <url>/2024/10/30/java/JDK8-17%E6%96%B0%E7%89%B9%E6%80%A7/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反射机制</title>
      <link href="/2024/10/30/java/%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/"/>
      <url>/2024/10/30/java/%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络编程</title>
      <link href="/2024/10/30/java/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
      <url>/2024/10/30/java/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>File类与IO流</title>
      <link href="/2024/10/30/java/File%E7%B1%BB%E4%B8%8EIO%E6%B5%81/"/>
      <url>/2024/10/30/java/File%E7%B1%BB%E4%B8%8EIO%E6%B5%81/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构与集合源码</title>
      <link href="/2024/10/30/java/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E9%9B%86%E5%90%88%E6%BA%90%E7%A0%81/"/>
      <url>/2024/10/30/java/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E9%9B%86%E5%90%88%E6%BA%90%E7%A0%81/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>泛型</title>
      <link href="/2024/10/30/java/%E6%B3%9B%E5%9E%8B/"/>
      <url>/2024/10/30/java/%E6%B3%9B%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>集合框架</title>
      <link href="/2024/10/30/java/%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/"/>
      <url>/2024/10/30/java/%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用类和基础API</title>
      <link href="/2024/10/30/java/%E5%B8%B8%E7%94%A8%E7%B1%BB%E5%92%8C%E5%9F%BA%E7%A1%80API/"/>
      <url>/2024/10/30/java/%E5%B8%B8%E7%94%A8%E7%B1%BB%E5%92%8C%E5%9F%BA%E7%A1%80API/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多线程</title>
      <link href="/2024/10/30/java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
      <url>/2024/10/30/java/%E5%A4%9A%E7%BA%BF%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>异常处理</title>
      <link href="/2024/10/30/java/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/"/>
      <url>/2024/10/30/java/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面向对象编程-3</title>
      <link href="/2024/10/30/java/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B-3/"/>
      <url>/2024/10/30/java/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B-3/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面向对象编程-2</title>
      <link href="/2024/10/30/java/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B-2/"/>
      <url>/2024/10/30/java/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B-2/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面向对象编程-1</title>
      <link href="/2024/10/30/java/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B-1/"/>
      <url>/2024/10/30/java/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B-1/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数组</title>
      <link href="/2024/10/30/java/%E6%95%B0%E7%BB%84/"/>
      <url>/2024/10/30/java/%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA的安装与使用</title>
      <link href="/2024/10/30/java/IDEA%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
      <url>/2024/10/30/java/IDEA%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>流程控制语句</title>
      <link href="/2024/10/30/java/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5/"/>
      <url>/2024/10/30/java/%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>变量与运算法</title>
      <link href="/2024/10/30/java/%E5%8F%98%E9%87%8F%E4%B8%8E%E8%BF%90%E7%AE%97%E6%B3%95/"/>
      <url>/2024/10/30/java/%E5%8F%98%E9%87%8F%E4%B8%8E%E8%BF%90%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>paper-LUD-YOLO</title>
      <link href="/2024/10/29/Deeplearning/detection/paper-LUD-YOLO/"/>
      <url>/2024/10/29/Deeplearning/detection/paper-LUD-YOLO/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Deepleraning </category>
          
          <category> detection </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Deepleraning </tag>
            
            <tag> detection </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java语言概述</title>
      <link href="/2024/10/28/java/java%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B0/"/>
      <url>/2024/10/28/java/java%E8%AF%AD%E8%A8%80%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<p><img loading="lazy" data-src="/img_2.png" alt="img_2.png"></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/10/27/hello-world/"/>
      <url>/2024/10/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
